# List of plugins
set -g @plugin 'tmux-plugins/tpm'
#https://github.com/tmux-plugins/tmux-sensible: basic tmux settings everyone can agree on 
set -g @plugin 'tmux-plugins/tmux-sensible'
#https://github.com/tmux-plugins/tmux-pain-control: standard pane key-bindings for tmux 
set -g @plugin 'tmux-plugins/tmux-pain-control'
#https://github.com/tmux-plugins/tmux-copycat: A plugin that enhances tmux search 
set -g @plugin 'tmux-plugins/tmux-copycat'

set -g @plugin 'jimeh/tmux-themepack'
set -g @themepack 'basic'
#set -g @themepack 'powerline/double/cyan'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

# colors, display with
# for i in {0..255}; do
#     printf "\x1b[38;5;${i}mcolour${i}\x1b[0m\n"
# done
# grays from colour232 to colour255

#set -g history-limit 10000    # boost history
#setw -g automatic-rename on   # rename window to reflect current program
#set -g renumber-windows on    # renumber windows when a window is closed
#set -g set-titles on          # set terminal title

# prefix key
unbind C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# reload config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

## pane style
#set -g pane-border-status top
#set -g pane-border-style "fg=colour08,bg=colour233"
#set -g pane-active-border-style "fg=colour166,bg=colour233"

#set -g pane-border-style "bg=yellow"
#set -g pane-active-border-style "bg=red"
# slightly longer pane indicators display time
#set -g display-panes-time 3000
#set -g window-style 'bg=colour232'
#set -g window-active-style 'bg=colour233'

#set -g pane-border-format " #(~/bin/format_tty_processes #{pane_tty}) "
## status bar style
#set-option -g status-style "fg=colour15,bg=colour233"

# Start windows and panes at 1, not 0
#set -g base-index 1
#setw -g pane-base-index 1

# use vim-like keys for splits and windows, set path to current dir
#unbind '"'
#unbind %
#
#bind-key v split-window -h -c "#{pane_current_path}"
#bind-key s split-window -c "#{pane_current_path}"
#bind-key | split-window -h -c "#{pane_current_path}"
#bind-key - split-window -c "#{pane_current_path}"
#bind-key c new-window -c "#{pane_current_path}"
#bind Tab last-window        # move to last active window
#
#bind-key h select-pane -L
#bind-key j select-pane -D
#bind-key k select-pane -U
#bind-key l select-pane -R
#
#bind-key H resize-pane -L 5
#bind-key J resize-pane -D 5
#bind-key K resize-pane -U 5
#bind-key L resize-pane -R 5

#Automatic layouting: When creating new splits or destroying older ones the currently selected layout isn't applied. To fix that, add following binds which will apply the currently selected layout to new or remaining panes: 
#bind-key -n M-c kill-pane \; select-layout
#bind-key -n M-n split-window \; select-layout

# turn on mouse support
set -g mouse on

# remedy delay when pressing nvim escape
set -sg escape-time 10


## window navigation
#unbind n
#unbind p
#bind -r C-h previous-window # select previous window
#bind -r C-l next-window     # select next window
#bind Tab last-window        # move to last active window

## --- buffers ------------------------------------------------------------------
#
#bind b list-buffers  # list paste buffers
#bind p paste-buffer  # paste from the top paste buffer
#bind P choose-buffer # choose which buffer to paste from

# --- copy mode ---------------------------------------------------------------

bind Enter copy-mode # enter copy mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi H send -X start-of-line 2> /dev/null || true'
run -b 'tmux bind -t vi-copy L end-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

## vim-style text selection in copy mode
#bind-key -Tcopy-mode-vi 'v' send -X begin-selection
#bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel pbcopy

#set -g default-terminal xterm-256color
